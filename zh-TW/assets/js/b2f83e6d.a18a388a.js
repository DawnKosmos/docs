"use strict";(self.webpackChunkdocusaurus_docs=self.webpackChunkdocusaurus_docs||[]).push([[9871],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>c});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),i=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=i(e.components);return n.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),m=i(a),c=r,f=m["".concat(o,".").concat(c)]||m[c]||u[c]||l;return a?n.createElement(f,s(s({ref:t},d),{},{components:a})):n.createElement(f,s({ref:t},d))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,s=new Array(l);s[0]=m;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,s[1]=p;for(var i=2;i<l;i++)s[i]=a[i];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},28585:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>f,frontMatter:()=>l,metadata:()=>p,toc:()=>i});var n=a(87462),r=(a(67294),a(3905));const l={title:"\u6578\u64da\u5c0e\u51fa",sidebar_label:"\u6578\u64da\u5c0e\u51fa",sidebar_position:4,slug:"/tax/data-export"},s=void 0,p={unversionedId:"v3/tax/data-export",id:"v3/tax/data-export",title:"\u6578\u64da\u5c0e\u51fa",description:"Retrieve Data Export",source:"@site/i18n/zh-TW/docusaurus-plugin-content-docs/current/v3/tax/data-export.mdx",sourceDirName:"v3/tax",slug:"/tax/data-export",permalink:"/docs-v2/zh-TW/tax/data-export",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"\u6578\u64da\u5c0e\u51fa",sidebar_label:"\u6578\u64da\u5c0e\u51fa",sidebar_position:4,slug:"/tax/data-export"},sidebar:"v3SideBar",previous:{title:"\u67e5\u8a62\u5831\u544a\u5c0e\u51fa\u72c0\u614b",permalink:"/docs-v2/zh-TW/tax/status"},next:{title:"\u6578\u64da\u8aaa\u660e",permalink:"/docs-v2/zh-TW/tax/explain"}},o={},i=[{value:"HTTP Request",id:"http-request",level:3},{value:"Request Parameters",id:"request-parameters",level:3},{value:"Response Parameters",id:"response-parameters",level:3},{value:"Sample Python Script",id:"sample-python-script",level:3},{value:"Request Example",id:"request-example",level:3},{value:"Response Example",id:"response-example",level:3}],d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},u=d("Tabs"),m=d("TabItem"),c={toc:i};function f(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Retrieve Data Export"),(0,r.kt)("h3",{id:"http-request"},"HTTP Request"),(0,r.kt)("p",null,"POST ",(0,r.kt)("inlineCode",{parentName:"p"},"/fht/compliance/tax/v3/private/url")),(0,r.kt)("h3",{id:"request-parameters"},"Request Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Comments"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"queryId"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("b",null,"true")),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Report Request ID")))),(0,r.kt)("h3",{id:"response-parameters"},"Response Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Comments"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"url"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"URL of files (Basepath+Files). To shorten the time it takes to generate the report, it could generate multiple files. Do take note of this and combine the several files using the same basepath when requesting the data export")))),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Convert S3 Files To CSV using python script")),(0,r.kt)("h3",{id:"sample-python-script"},"Sample Python Script"),(0,r.kt)(u,{mdxType:"Tabs"},(0,r.kt)(m,{value:"console",label:"Console",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'\nimport pandas as pd\nimport os\n\nclass Bases(object):\n    @staticmethod\n    def path_list(path):\n        """\n        :param path:\n        :return: list of file paths\n        """\n        file_list = []\n        if os.path.isdir(path):\n            print("it\'s a directory")\n            for root, dirs, files in os.walk(path):\n                for f in files:\n                    file = os.path.join(root, f)\n                    file_list.append(file)\n            return file_list\n        elif os.path.isfile(path):\n            print("it\'s a normal file")\n            return [path]\n\nclass pd_service(Bases):\n    def get_data(self, file_path):\n        """\n        Read s3 files, merge forms\n        :param file_path:\n        :return:\n        """\n        df_all = pd.DataFrame()\n        for paths in self.path_list(path=file_path):\n            df_all = pd.concat([df_all, pd.read_orc(paths)], axis=0)\n        print(\'Row number of tables\uff1a\', df_all[df_all.columns[1]].count())\n        print(df_all.columns.values)\n        df_all.sort_values("TradeTime", inplace=True)\n        df_all.to_csv("test_data_s3.csv", header=True, index=False)\n        print(df_all)\n        return df_all\n\nif __name__ == \'__main__\':\n    # file path\n    path = \'XXXX\'\n    test = pd_service()\n    test.get_data(file_path=path)\n')))),(0,r.kt)("h3",{id:"request-example"},"Request Example"),(0,r.kt)(u,{mdxType:"Tabs"},(0,r.kt)(m,{value:"console",label:"Console",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'POST /fht/compliance/tax/v3/private/url HTTP/1.1\nHost: api.bybit.com\nX-BAPI-SIGN-TYPE: 2\nX-BAPI-SIGN: xxxxxxxxxxxxxx\nX-BAPI-API-KEY: xxxxxxxxxxxxxx\nX-BAPI-TIMESTAMP: 1671184057480\nX-BAPI-RECV-WINDOW: 5000\nContent-Type: application/json\n{"queryId":"12312312415325325"}\n')))),(0,r.kt)("h3",{id:"response-example"},"Response Example"),(0,r.kt)(u,{mdxType:"Tabs"},(0,r.kt)(m,{value:"js linear",label:"assets",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "retCode": 0,\n    "retMsg": "OK",\n    "result": {\n        "url": "{\\"Files\\":[\\"20221216/adfsf34234-8e87-4c72-bc70-dsa234234daf/_SUCCESS\\",\\"20221216/dafasdf34243-8e87-4c72-bc70-dafsd34234/part-00000-adfsd34-00bd-4fe9-9591-adfasr343-c000\\"],\\"Basepath\\":\\"https://prod-bybit-tax-api-1705-rz.s3.ap-southeast-1.amazonaws.com/\\"}"\n    },\n    "retExtInfo": {},\n    "time": 1671184057646\n}\n')))))}f.isMDXComponent=!0}}]);